# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [dev,local]

jobs:
  name: Carryduo-TEAM-BE
  build:
    runs-on: ubuntu-18.04
    env:
    strategy:
      matrix:
        node-version: ${{secrets.NODE_VERSION}}
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - run: npm ci
        if: ${{ always() }}
      - name: Create env file
        run: |
        touch .env
         echo NODE_ENV:${{secrets.NODE_ENV}} >> .env
         echo PORT:${{secrets.PORT}} >> .env
         echo AUTH_PATH:${{secrets.AUTH_PATH}} >> .env
         echo FRONT_URL_PROD:${{secrets.FRONT_URL_PROD}} >> .env
         echo FRONT_URL2_PROD:${{secrets.FRONT_URL2_PROD}} >> .env
         echo FRONT_URL_DEV:${{secrets.FRONT_URL_DEV}} >> .env
         echo FRONT_URL2_DEV:${{secrets.FRONT_URL2_DEV}} >> .env
         echo FRONT_URL_LOCAL:${{secrets.FRONT_URL_LOCAL}} >> .env
         echo SWAGGER_ID:${{secrets.SWAGGER_ID}} >> .env
         echo SWAGGER_PW:${{secrets.SWAGGER_PW}} >> .env
         echo SWAGGER_JSON:${{secrets.SWAGGER_JSON}} >> .env
         echo SWAGGER_PATH_DEV:${{secrets.SWAGGER_PATH_DEV}} >> .env
         echo DB_USERNAME:${{secrets.DB_USERNAME}} >> .env
         echo DB_PASSWORD:${{secrets.DB_PASSWORD}} >> .env
         echo DB_HOST:${{secrets.DB_HOST}} >> .env
         echo DB_PORT:${{secrets.DB_PORT}} >> .env
         echo DB_NAME:${{secrets.DB_NAME}} >> .env
         echo REDIS_HOST:${{secrets.REDIS_HOST}} >> .env
         echo REIDS_PORT:${{secrets.REIDS_PORT}} >> .env
         echo REDIS_PASSWORD:${{secrets.REDIS_PASSWORD}} >> .env
         echo REDIS_TTL:${{secrets.REDIS_TTL}} >> .env
         echo JWT_SECRET_KEY:${{secrets.JWT_SECRET_KEY}} >> .env
         echo JWT_EXPRIED_TIME:${{secrets.JWT_EXPRIED_TIME}} >> .env
         echo KAKAO_CLIENT_ID:${{secrets.KAKAO_CLIENT_ID}} >> .env
         echo KAKAO_CALLBACK_URL:${{secrets.KAKAO_CALLBACK_URL}} >> .env
         echo KAKAO_CLIENT_SECRET_KEY:${{secrets.KAKAO_CLIENT_SECRET_KEY}} >> .env
         echo RIOT_API_KEY:${{secrets.RIOT_API_KEY}} >> .env
         cat .env
      - run: npm test
        if: ${{ always() }}
      - run: npm run build --if-present
        if: ${{ always() }}
